swagger: '2.0'
info:
  description: todolist API documentation
  version: 0.1
  title: todolist API
  termsOfService: API terms of services URL
  contact:
    name: Your Name
    url: 'Your web site url'
    email: your email
  license:
    name: API License type
    url: API License URL
host: 'localhost:8080'
basePath: /
tags:
  - name: the tasks API
    description: Task Resource
paths:
  /api/tasks:
    put:
      tags:
        - tasks
      summary: "Retrieve the list of 'Task' objects."
      description: 'Optional id query param to retrieve a specific task'
      operationId: getAllTasks
      produces:
        - application/json
      parameters:
        - in: query
          name: id
          description: the task to create
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/create:
    get:
      tags:
        - API
      summary: "Creates a 'Task' object."
      description: Validates the content property for length etc.
      operationId: createTask
      parameters:
        - in: body
          name: task
          description: the task to create
          required: false
          schema:
            $ref: '#/definitions/Task'
      responses:
        '201':
          description: Task Created
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/modify:
    put:
      tags:
        - the tasks API
      summary: updates a task.
      description: Validates the content property for length etc.
      operationId: updateTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: task
          description: the updated task
          required: false
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: Task updated
          schema:
            $ref: '#/definitions/Task'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: (Bad Request) the taskDTO is not valid
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: (Internal Server Error) the task couldnt be updated    
  /api/tasks/{id}:
    delete:
      tags:
        - api
      summary: deletes a task
      description: Deleting a task is irrevocable.
      operationId: deleteTaskUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the task
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Task Deleted
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Task:
    type: object
    required:
      - content
    description: This describes a task. Tasks require a content property to be set.
    properties:
      content:
        type: boolean
        description: when true this task is completed
      completed:
        type: boolean
        description: when true this task is completed
      createdAt:
        type: string
        format: date-time
        description: the creation date of this task
      id:
        type: integer
        format: int64
        description: This id property is autogenerated when a task is created.

